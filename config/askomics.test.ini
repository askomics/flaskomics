[flask]
debug = true
secret_key = a1loxpwMMxYNT7wVZpPu
session_timeout = 60

[celery]
broker_url = redis://localhost:6379
result_backend = redis://localhost:6379

[askomics]
debug = false
debug_ttl = false

footer_message = Test
display_commit_hash = false

# data directory
data_directory = /tmp/flaskomics_test
database_path = /tmp/flaskomics_test/database.db

# Authentication

# Salt for user password. Use a random string
password_salt = TywnQLltnRw4UFZARPei
# If true, accout are locked at creation
default_locked_account = false

# Disabled upload and integration for non admin (for external endpoint exploration)
disable_integration = false

# User quota
# Default disk usage quota for user (0 = unlimited, <value><unit>)
# Exemple: 500MB, 1GB ...
quota = 0

# Github URL of the project
github = https://github.com/askomics/flaskomics

[triplestore]
# name of the triplestore, can be virtuoso or fuseki
triplestore = virtuoso
# Sparql endpoint
endpoint = http://localhost:8890/sparql
# Sparql updatepoint
updatepoint = http://localhost:8890/sparql
# If triplestore is fuseki, set the upload url
# fuseki_upload_url = http://localhost:3030/database/upload
# Triplestore credentials
username = dba
password = dba
# If the triplesotre and askomics are on different network, the loadurl is askomics url accessible by the triplesotre
# load_url = 
upload_method = insert
# Number of triple to integrate in one request
chunk_size = 60000
# Block size for position managment
block_size = 10000
# Serialization format: nt/xml/turtle
# nt: fastest
# turtle: more human readable
# xml: no benefits
serialization_format = nt
# Default askomics graph
default_graph = urn:sparql:askomics_test
# User graph
users_graph = urn:sparql:askomics_test:users
# Askomics rdf prefix and namespace
# prefix        :
# namespace     askomics:
prefix = http://www.semanticweb.org/user/ontologies/2018/1#
namespace = http://www.semanticweb.org/askomics/ontologies/2018/1#
# preview limit
preview_limit = 25
# Triplestore max rows limit
result_set_max_rows = 10000
